server:
  port: 8110
spring:
  application:
    # 指定注册到eureka server上的服务名称
    name: microservice-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
  #可以根据请求参数,cookie,host,请求时间,请求头等进行校验判断路由, 下面根据先后顺序转发
      routes:
        - id: baidu_route
          uri: http://www.baidu.com:80
          predicates:
            - Path=/baidu/**
          filters:
            - StripPrefix=1
        - id: providerUser
          uri: lb://microservice-provider-user
          predicates:
            - Path=/provider/**
          filters:
            - name: Hystrix
              args:
                name: myDefaultCMD
                fallbackUri: 'forward:/defaultfallback'
            - StripPrefix=1
        - id: providerUser2
          uri: lb://microservice-provider-user
          predicates:
            - Path=/provider2/**
          filters:
            - name: RequestRateLimiter
              args:
                # 使用SpEL名称引用Bean，与上面新建的RateLimiterConfig类中的bean的name相同
                key-resolver: '#{@remoteAddrKeyResolver}'
                # 每秒最大访问次数
                redis-rate-limiter.replenishRate: 1
                # 令牌桶最大容量
                redis-rate-limiter.burstCapacity: 20
            - StripPrefix=1
      enabled: true
  redis:
    host: localhost
    port: 6379

# hystrix 信号量隔离，3秒后自动超时
hystrix:
  command:
    myDefaultCMD:
      execution:
        isolation:
          strategy: SEMAPHORE
          thread:
            timeoutInMilliseconds: 3000
  shareSecurityContext: true



eureka:
  client:
    service-url:
      # 指定eureka server通信地址，注意/eureka/小尾巴不能少
      defaultZone: http://localhost:8761/eureka/
  instance:
    # 是否注册IP到eureka server，如不指定或设为false，那就会注册主机名到eureka server
    prefer-ip-address: true
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
# 暴露监控端点